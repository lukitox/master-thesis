@startuml
'skinparam monochrome true

Femodel "1" o-- "1..*" Material
'Femodel "1" o-- "1" MapdlConsole
'Material "1" o-- "1" MapdlConsole
'Femodel <-[dotted]-> PrepFunctions : uses
Femodel <-[dotted]-> PostFunctions : uses
Femodel "1" o-- "1" Propeller

class Propeller{
  -__parameters: Dict
  -__loadcases: Dict
  -__load_envelope: Dict
  -__geometry: List
  -__sections: List
  --
  -__init__(self, number_of_blades: Int, tip_radius: Float, hub_radius: Float)
  -__repr__(self): Str
  +calc_loads(self)
  +pressure_distribution(self, loadcase: Loadcase): np.array
  ..Getter..
  +geometry(self): List
  +loadcases(self): Dict
  +load_envelope(self): Dict
  +parameters(self): Dict
  +sections(self): List
  ..Setter..
  +add_loadcase(self, name: Str, loadcase: Loadcase)
  +add_section(self, rR: Float, airfoil: Airfoil)
  +geometry(self, array: List or np.array)
  +parameters(self, parameters: Dict)
  +set_load_envelope(self)
  
}
  
class Femodel{
  -__element_aoa_vector: np.array
  -__element_chord_vector: np.array
  -__element_data: DataFrame
  +mapdl: MapdlConsole
  -__materials: Dict
  +propeller: Propeller
  --
  -__apply_loads__(self)
  -__change_design_variables__(self, *args, **kwargs)
  __calc_element_data__(self)
  -__define_and_mesh_geometry__(self)
  -__get_edges__(self, y: Float): le: np.array, te: np.array, length: Float
  -__init__(self, mapdl: MapdlConsole, propeller: Propeller, loads: Loadcase, mesh_density_factor = 1: Float, seltol = 1e-4: Float)
  -__setup__(self, loads: Loadcase, mesh_density_factor: Float, seltol: Float)
  -__solve__(self)
  -__post_processing__(self)
  +cdread(self)
  +cdwrite(self)
  +clear(self)
  +convergence_study(self, mesh_density)
  +evaluate(self, x: List): f: List, g: List, h: List
  +pre_processing(self)
  +post_processing(self)
  +reaction_forces(self)
  ..Getter..
  +element_aoa_vector(self): np.array
  +element_chord_vevtor(self): np.array
  +element_data(self): DataFrame
  +materials(self): Dict
  ..Setter..
  +materials(self, materials)
  
}

'class MapdlConsole{}

class Material{
  -__fc: Dict
  +mapdl: MapdlConsole
  -__mp: Dict
  -__name: Str
  -__number: Int
  -__path: Str
  --
  -__init__(self, mapdl: MapdlConsole, name: Str, number: Int)
  +assign_mp(self)
  +assign_fc(self)
  +load(self, filename: Str)
  +read_csv(self, filename: Str)
  +save(self)
  ..Getter..
  +fc(self): Dict
  +mp(self): Dict
  +name(self): Str
  +number(self): Int
  ..Setter..
  +fc(self, fc: Dict)
  +mp(self, mp: Dict)
  +name(self, name: Str)
  +number(self, number: Str)
}

class PostFunctions << (M,orchid) >> {
  +{static}fc_puck(mapdl: MapdlConsole): I: List
}

@enduml